{
  "name": "switch",
  "files": [
    {
      "name": "switch.tsx",
      "content": "import * as React from \"react\";\nimport { cn } from \"@/utils/cn\";\n\ninterface SwitchProps extends React.ComponentPropsWithoutRef<\"button\"> {\n  checked?: boolean;\n  onCheckedChange?: (checked: boolean) => void;\n}\n\n\nconst Switch = React.forwardRef<HTMLButtonElement, SwitchProps>(\n  ({ className, checked, onCheckedChange, ...props }, ref) => {\n    const [isChecked, setIsChecked] = React.useState(checked || false);\n\n    const handleClick = () => {\n      const newChecked = !isChecked;\n      setIsChecked(newChecked);\n      if (onCheckedChange) {\n        onCheckedChange(newChecked);\n      }\n    };\n\n    return (\n      <button\n        type=\"button\"\n        role=\"switch\"\n        aria-checked={isChecked}\n        className={cn(\n          \"peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50\",\n          isChecked ? \"bg-primary\" : \"bg-accent\",\n          className\n        )}\n        onClick={handleClick}\n        ref={ref}\n        {...props}\n      >\n        <span\n          className={cn(\n            \"pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform\",\n            isChecked ? \"translate-x-4\" : \"translate-x-0\"\n          )}\n        />\n      </button>\n    );\n  }\n);\n\nSwitch.displayName = \"Switch\";\n\nexport { Switch };\n"
    }
  ],
  "type": "components:ui"
}
